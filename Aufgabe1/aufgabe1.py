import numpy as np

# 1.1.1
a1 = np.arange(100, 201)

# [100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117
#  118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
#  136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
#  154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171
#  172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189
#  190 191 192 193 194 195 196 197 198 199 200]

# 1.1.2
a2 = np.arange(100, 201, 2) # oder np.linspace(100, 200, 50)

# [100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117
#  118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
#  136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
#  154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171
#  172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189
#  190 191 192 193 194 195 196 197 198 199 200]

# 1.1.3
a3 = np.arange(100, 110.5, 0.5)

# [100.  100.5 101.  101.5 102.  102.5 103.  103.5 104.  104.5 105.  105.5
#  106.  106.5 107.  107.5 108.  108.5 109.  109.5 110. ]

# 1.1.4
normal_verteilt = np.random.normal(0, 1, 100)

# [ 0.33781112  0.61762272  0.91279369 -0.65524535  1.43897023  0.27007405
#  -0.32633618  0.20211898 -1.06973333  0.72664949 -1.15510396  0.05593477
#  -0.76244374  0.51300213  0.73730765 -0.26125945 -0.64885174 -0.60907483
#   0.76241266 -0.78156831  0.24151133 -0.16233996  0.23761357  0.54954475
#   0.27142775  0.66975646  0.21964192  0.09048508 -0.28135815  0.57463847
#   0.45795281 -2.11368259  0.16993826 -0.80527687 -0.27603826 -0.60545451
#  -0.25245614  0.33534424 -1.03030464  0.66393343  0.43492246 -0.55065658
#   0.58612731 -1.70751978 -1.06360608 -0.10258045 -0.7545021   0.07515408
#   2.62938372 -1.81769053 -0.99914912 -0.71960227  1.33181356 -0.88477934
#  -0.90163235  1.22475376 -1.29092692  0.56695886  1.37569085 -0.67763432
#  -0.62517971 -0.17005319  1.62817897 -0.81776639 -1.08343343 -0.18644664
#   0.99313101 -0.33043435  1.59491962  0.63529513  0.76983224 -0.47159397
#  -0.04656064 -1.0482201   0.18267823  0.15411836 -0.20281729 -2.13329082
#   2.9228902   1.18750777  0.56190982 -0.98484679  1.97224328  2.25050365
#  -0.6442063  -0.43150273 -0.57779166 -1.56855396 -0.50548026 -0.59936012
#  -0.9930349   0.31754582  0.2938641  -1.5115244   0.08541566  0.66330177
#  -0.05564778  0.56516137 -0.25665675  0.45633113]

gleich_verteilt = np.random.uniform(0, 1, 100)

# [0.61059637 0.56028413 0.05241553 0.77317944 0.0452872  0.25592935
#  0.29200363 0.54645839 0.38580506 0.32376121 0.81004305 0.63909535
#  0.98288561 0.29819043 0.43336306 0.14822355 0.135      0.21825604
#  0.33802413 0.37287522 0.82215615 0.92445329 0.1253263  0.9669019
#  0.02719366 0.42371651 0.87174298 0.58652017 0.50413483 0.20338929
#  0.87706494 0.62280126 0.39975639 0.22406986 0.46821943 0.04362944
#  0.74465818 0.59441423 0.54625488 0.82531982 0.17349692 0.79118349
#  0.50659575 0.23779112 0.38149093 0.71103058 0.01173929 0.95022071
#  0.1879496  0.97880735 0.62290942 0.41577804 0.08394829 0.88363898
#  0.23392414 0.57000115 0.13447467 0.7376084  0.18424142 0.51190472
#  0.43950782 0.24437606 0.40816653 0.89217692 0.48661485 0.48971419
#  0.95723622 0.11834795 0.56815842 0.06687114 0.23846519 0.05828696
#  0.97768077 0.62661017 0.949474   0.59729445 0.27697256 0.16216144
#  0.88836332 0.59072711 0.49250162 0.64874243 0.88074334 0.12033613
#  0.48187772 0.6771665  0.0744886  0.49098555 0.72226065 0.16756758
#  0.57686294 0.92281591 0.27281094 0.47396359 0.48202403 0.79636494
#  0.00899824 0.56285048 0.54324141 0.72136455]

# 2.1
mittelwert = np.mean(normal_verteilt)
# 0.18403067728287723
median = np.median(normal_verteilt)
# 0.021269986899355206
minimum = np.min(normal_verteilt)
# -2.0333798441011046
maximum = np.max(normal_verteilt)
# 2.270445898351416
standardabweichung = np.std(normal_verteilt)
# 1.0361938220278795

#2.2
under_border = np.mean(normal_verteilt) - np.std(normal_verteilt)*2
upper_border = np.mean(normal_verteilt) + np.std(normal_verteilt)*2

# 95% der Werte liegen zwischen -1.9072948511802754 und 1.8187306626523543

#2.3
b1 = normal_verteilt * 100

# [  97.47514016 -172.9884076   -18.6926091   -19.61502    -161.51240854
#   -68.6160623   220.37005109   86.36121752  104.74834058  -89.9160471
#   -76.45322255   68.22710952  160.24971347   54.77147371  109.56023646
#   -21.83893969   90.93776108 -180.6731682   131.46195821  -91.98044135
#    33.2323181    25.66369985  -28.43075728 -119.68799135 -156.70951643
#    18.14919119  -37.49334272  -81.94965401   61.15436456  -70.39142951
#   158.28731599  116.68258079  -87.21606906   91.42357654   26.30471395
#  -141.09823743  -32.51481054  139.95951653 -172.38747687  -73.50708614
#  -158.55159969  -15.95553925  -41.60805043  124.63604375  -54.06930776
#    45.50542964 -111.00225971    9.99858697 -221.04572317   37.9990187
#  -156.18051468  112.23541243   33.07918035  -67.80533623   -4.75833669
#    58.67463519  141.7563543   -49.64896887 -172.11902953 -124.38774155
#   -74.35268588   13.13555012  -68.23037191   45.84877771   19.19100342
#  -200.86999336  114.29448157  -20.23353582 -111.76232508  -73.48776142
#    92.83172213  -72.47969528   -6.01243163   43.76631592 -129.12956673
#    44.69777291   92.9303909   -19.63491128  -43.56885482  -72.95904711
#   -80.63680234  -22.48102998  -90.00055128  157.92513194    0.77676472
#    28.44690557 -102.89709354  -13.46001235 -137.86309456 -250.17220425
#    14.1683878   -21.07705564 -110.42738266  -99.50953315  -70.9532895
#   -11.6059519   -27.82409423  -57.11224347   51.48824506   -4.19394564]

#2.4
b2 = normal_verteilt[:10]

# [-1.43332347 -0.94813418 -0.28481223 -0.32821893  0.55660331  0.1126686
#  -0.2251919  -0.41432523 -1.0874217   1.2823465 ]

#2.5
b3 = normal_verteilt[normal_verteilt >0]

# [0.50390077 0.92319615 0.76554603 0.26867474 0.13660402 0.04691176
#  0.26026062 2.12327234 1.39225908 1.74620482 0.17607544 0.09070141
#  0.36141425 0.52285205 0.9579036  0.68327333 0.71624321 0.80391239
#  0.7656929  0.13343033 0.71595948 0.66068974 1.26309938 0.88912336
#  1.45913309 2.18050957 0.41049274 0.17938748 1.00952538 1.4067478
#  0.52858582 1.44268275 0.13998185 0.14986552 0.64429313 0.92780016
#  0.56160743 1.87934155 2.31482261 1.64217625 0.01041158 1.34786419
#  0.86804586 1.36932215 0.53567713 0.38947032 0.61325574 0.17034122
#  0.07194693 0.30073086 0.44600852 1.86699287 0.71853953 1.56591535
#  0.95759541 0.01157485 0.7947577  0.46560841 0.61475276]

print(b3)
